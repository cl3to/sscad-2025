metadata:
  description: Task Bench MPP Benchmark
  version: "1.0"
  runs: 5
  timeout: 600
  retry: False
  success_on_return: [0, 213, 255]
  envvars: []

applications:
  task-bench:
    command: >
      mpirun -hosts {{ hosts }} -ppn 1
      -np {{ workers }} llvm-offload-mpi-proxy-device :
      -np 1 {{ version }}
      {%- for i in range(ngraphs) %}
      -steps {{ steps }} -width {{ workers * 2 }} -type {{ type }} -kernel {{ kernel }} -iter {{ iter }}
      {%- if i < ngraphs - 1 %} -and {% endif %}
      {%- endfor %}

    capture:
      - type: matches
        name: total_tasks
        pattern: "Total Tasks"
        lambda: >
          lambda x: (
            int(x.split("Total Tasks ")[1].strip())
          )
      - type: matches
        name: total_deps
        pattern: "Total Dependencies"
        lambda: >
          lambda x: (
            int(x.split("Total Dependencies ")[1].strip())
          )
      - type: matches
        name: total_flops
        pattern: "Total FLOPs"
        lambda: >
          lambda x: (
            int(x.split("Total FLOPs ")[1].strip())
          )
      - type: matches
        name: total_bytes
        pattern: "Total Bytes"
        lambda: >
          lambda x: (
            int(x.split("Total Bytes ")[1].strip())
          )
      - type: matches
        name: wall_time
        pattern: "Elapsed Time"
        lambda: >
          lambda x: (lambda m,e: float(m) * 10**int(e))(
          *x.split("Elapsed Time ")[1]
            .split(" seconds")[0]
            .strip()
            .lower()
            .split("e", 1)
          )

benchmarks:
  task-bench:
    version:
      - bin/main_gpu
    workers: [1, 2, 3, 4]
    ngraphs: [5]
    steps: [1000]
    kernel:
      - compute_bound_gpu
    type:
      - trivial
      - fft
      - stencil_1d
    iter:
      - 1000
      - 1000000
      - 2000000